export declare type Point = {
    longitude: number;
    latitude: number;
};
export interface Field {
    alias?: string;
}
export interface NumberField extends Field {
    type: 'number';
}
export interface StringField extends Field {
    type: 'string';
    separator?: string;
}
export interface TextField extends Field {
    type: 'text';
}
export interface BooleanField extends Field {
    type: 'boolean';
}
export interface PointField extends Field {
    type: 'point';
}
export interface DateField extends Field {
    type: 'date';
}
export interface StringArrayField extends Field {
    type: 'string[]';
    separator?: string;
}
export declare type FieldDefinition = StringField | TextField | NumberField | BooleanField | PointField | DateField | StringArrayField;
export declare type SchemaDefinition = Record<string, FieldDefinition>;
export declare type IdStrategy = () => string;
export declare type StopWordOptions = 'OFF' | 'DEFAULT' | 'CUSTOM';
